package JavaExamples;
import java.util.UUID;

import de.fraunhofer.fokus.fuzzing.fuzzino.FuzzedValue;
import de.fraunhofer.fokus.fuzzing.fuzzino.StringRequestProcessor;
import de.fraunhofer.fokus.fuzzing.fuzzino.request.RequestFactory;
import de.fraunhofer.fokus.fuzzing.fuzzino.request.StringEncoding;
import de.fraunhofer.fokus.fuzzing.fuzzino.request.StringRequest;
import de.fraunhofer.fokus.fuzzing.fuzzino.request.StringSpecification;
import de.fraunhofer.fokus.fuzzing.fuzzino.request.StringType;
import de.fraunhofer.fokus.fuzzing.fuzzino.response.FuzzedValuesByGenerators;
import de.fraunhofer.fokus.fuzzing.fuzzino.response.GeneratorSpecificFuzzedValues;
import de.fraunhofer.fokus.fuzzing.fuzzino.response.StringResponse;


public class JavaRequestClassesExample {
	
	public static void main(String[] args) {
		// generate a string request (corresponding XML tag 'string')
		StringRequest stringRequest = RequestFactory.INSTANCE.createStringRequest();
		stringRequest.setName("MyFirstRequest");
		stringRequest.setMaxValues(10);
		
		// generate a a specification that describes the type (corresponding XML tag 'specification')
		StringSpecification stringSpecification = RequestFactory.INSTANCE.createStringSpecification();
		stringSpecification.setEncoding(StringEncoding.UTF8);
		stringSpecification.setType(StringType.FILENAME);
		stringSpecification.setIgnoreLengths(true);
		
		// add the specification to the string request
		stringRequest.setSpecification(stringSpecification);
		
		// instantiate a request processor for the tring requests, the second argument is arbitrary, but necessary
		// further requests
		StringRequestProcessor stringRequestProcessor = new StringRequestProcessor(stringRequest, UUID.randomUUID());
		
		// fetch the response of the request processor
		// the request processor will choose appropriate fuzzing heuristics for you
		// according to the specification
		StringResponse stringResponse = stringRequestProcessor.getResponse();
		
		// fetch the fuzzed values generated by heuristics that generate values from the specification
		FuzzedValuesByGenerators<String> byGenerators = stringResponse.getGeneratorBasedSection();
		
		// fetch for each fuzzing heuristic chosen by the request processor...
		for (GeneratorSpecificFuzzedValues<String> generatorSpecificValues : byGenerators) {
			// ... its fuzzed values
			for (FuzzedValue<String> fuzzedValue : generatorSpecificValues) {
				System.out.println(fuzzedValue);
			}
			
		}
		
	}

}
